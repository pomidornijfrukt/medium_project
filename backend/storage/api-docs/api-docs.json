{
    "openapi": "3.0.0",
    "info": {
        "title": "Forum API Documentation",
        "description": "API documentation for Laravel Forum application with Vue.js frontend",
        "contact": {
            "name": "API Support",
            "email": "admin@forum.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:6969",
            "description": "Forum API Server"
        }
    ],
    "paths": {
        "/api/posts/advanced-search": {
            "get": {
                "tags": [
                    "Advanced Posts"
                ],
                "summary": "Advanced post search with filtering and aggregation",
                "operationId": "b539d7e15e2b52e03d1b3577367fc0ba",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for title and content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Comma-separated tag names to include",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_tags",
                        "in": "query",
                        "description": "Comma-separated tag names to exclude",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author_role",
                        "in": "query",
                        "description": "Filter by author role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "moderator",
                                "member"
                            ]
                        }
                    },
                    {
                        "name": "min_replies",
                        "in": "query",
                        "description": "Minimum number of replies",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort criteria",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "recent",
                                "popular",
                                "replies",
                                "engagement"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advanced search results with aggregated data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "post_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "How to learn Laravel"
                                                            },
                                                            "author": {
                                                                "type": "string",
                                                                "example": "john_doe"
                                                            },
                                                            "author_role": {
                                                                "type": "string",
                                                                "example": "member"
                                                            },
                                                            "reply_count": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "unique_repliers": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "tag_count": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "engagement_score": {
                                                                "type": "number",
                                                                "example": 8.5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "aggregations": {
                                                    "properties": {
                                                        "total_results": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "avg_replies": {
                                                            "type": "number",
                                                            "example": 3.2
                                                        },
                                                        "role_distribution": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts/trending": {
            "get": {
                "tags": [
                    "Advanced Posts"
                ],
                "summary": "Get trending posts using advanced analytics",
                "operationId": "c760d8b405a9b64f35287886d465ecea",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for trending analysis",
                        "schema": {
                            "type": "string",
                            "default": "7d",
                            "enum": [
                                "24h",
                                "7d",
                                "30d"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trending posts with analytics data"
                    }
                }
            }
        },
        "/api/posts/recommendations/{userId}": {
            "get": {
                "tags": [
                    "Advanced Posts"
                ],
                "summary": "Get personalized post recommendations using collaborative filtering",
                "operationId": "5ef27e7ae83b9a4a53234624e10c2672",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID for recommendations",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Personalized post recommendations"
                    }
                }
            }
        },
        "/api/analytics/user-activity": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get user activity analytics with GROUP BY and JOIN",
                "operationId": "522ef1749e82a46b35ea5b7ba6b4012b",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for analytics (7days, 30days, 90days, 1year)",
                        "schema": {
                            "type": "string",
                            "default": "30days",
                            "enum": [
                                "7days",
                                "30days",
                                "90days",
                                "1year"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activity analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "posts_by_role": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "role": {
                                                                "type": "string",
                                                                "example": "member"
                                                            },
                                                            "post_count": {
                                                                "type": "integer",
                                                                "example": 45
                                                            },
                                                            "user_count": {
                                                                "type": "integer",
                                                                "example": 12
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "daily_activity": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "example": "2024-01-15"
                                                            },
                                                            "posts_created": {
                                                                "type": "integer",
                                                                "example": 8
                                                            },
                                                            "users_registered": {
                                                                "type": "integer",
                                                                "example": 3
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "user_engagement": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "username": {
                                                                "type": "string",
                                                                "example": "john_doe"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "member"
                                                            },
                                                            "total_posts": {
                                                                "type": "integer",
                                                                "example": 15
                                                            },
                                                            "last_active": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/analytics/content-insights": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get content insights with advanced GROUP BY and JOIN operations",
                "operationId": "3cf9ef2252e0c57124a15cddb6a007f2",
                "responses": {
                    "200": {
                        "description": "Content insights retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "popular_tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "tag_name": {
                                                                "type": "string",
                                                                "example": "javascript"
                                                            },
                                                            "tag_description": {
                                                                "type": "string",
                                                                "example": "JavaScript programming"
                                                            },
                                                            "post_count": {
                                                                "type": "integer",
                                                                "example": 25
                                                            },
                                                            "unique_authors": {
                                                                "type": "integer",
                                                                "example": 8
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "content_by_status": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "status": {
                                                                "type": "string",
                                                                "example": "published"
                                                            },
                                                            "count": {
                                                                "type": "integer",
                                                                "example": 150
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "top_contributors": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "username": {
                                                                "type": "string",
                                                                "example": "author123"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "member"
                                                            },
                                                            "post_count": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "avg_content_length": {
                                                                "type": "number",
                                                                "example": 256.7
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/analytics/user-behavior": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get user behavior analytics using complex JOINs",
                "operationId": "a06455cecc62b100e16ca67222f56238",
                "responses": {
                    "200": {
                        "description": "User behavior analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "role_changes": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "from_role": {
                                                                "type": "string",
                                                                "example": "member"
                                                            },
                                                            "to_role": {
                                                                "type": "string",
                                                                "example": "moderator"
                                                            },
                                                            "change_count": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "user_activity_summary": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "username": {
                                                                "type": "string",
                                                                "example": "jane_doe"
                                                            },
                                                            "total_actions": {
                                                                "type": "integer",
                                                                "example": 25
                                                            },
                                                            "posts_created": {
                                                                "type": "integer",
                                                                "example": 8
                                                            },
                                                            "role_changes_received": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/analytics/post-relationships": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Analyze post relationships and threading using JOINs",
                "operationId": "f17cb200ab6352a8f2b07834ca280eb6",
                "responses": {
                    "200": {
                        "description": "Post relationship analytics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "e66f8a7452e13b03ae4e77dbb42e435c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user and create token",
                "operationId": "d618a255475240ba3d40cc39692cd924",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account banned or pending",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your account has been banned. Please contact an administrator."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "operationId": "8f60355fe45caf090eec729e26434da4",
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user (Revoke the token)",
                "operationId": "1e357eb2c93a1bdabebcebfa088332bf",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all published posts",
                "operationId": "4186b281454d4cf4c67a3254c731218a",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search posts by topic or content",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Post"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "c525736cca34af3402c290c5a680dbde",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "topic",
                                    "content"
                                ],
                                "properties": {
                                    "topic": {
                                        "type": "string",
                                        "example": "How to learn Laravel"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the content of the post..."
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "laravel",
                                            "php"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published"
                                        ],
                                        "example": "published"
                                    },
                                    "parent_post_id": {
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a specific post",
                "operationId": "e0f9a2214074a618841855b152721330",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update a post",
                "operationId": "0dec9d9e95078da66ec7717d5b63e8f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "topic": {
                                        "type": "string",
                                        "example": "Updated topic"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content..."
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "laravel",
                                            "updated"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published"
                                        ],
                                        "example": "published"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to update this post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "11cb021c9991dd024d16206da5df0ecd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete this post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/tag/{tag}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get posts by tag",
                "operationId": "bffed346ab5e150f9e725fbc49ade819",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "Tag name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts/user/{userId}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get posts by user",
                "operationId": "151ec3c02b26ee482463164a12c0fc81",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get current user's posts",
                "operationId": "ea3dc03fba05e8e6c175d27b38df0092",
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}/linked": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get linked posts (comments) for a post",
                "operationId": "0713a546a3bdef09c47e1c7a1b4415b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Linked posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/posts": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all posts for admin (including drafts and deleted)",
                "operationId": "9b1aaeea3303ec1e2e529a7d6d4afb12",
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Display a listing of tags",
                "operationId": "31d3376b0360d84ec9014d43eafbe1f8",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search tags by name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tag"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Store a newly created tag",
                "operationId": "d756cc56d0431737f78f6633ac57c577",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag_name",
                                    "description"
                                ],
                                "properties": {
                                    "tag_name": {
                                        "type": "string",
                                        "example": "laravel"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Laravel framework related posts"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tag created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tag created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to create tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tags/{tagName}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Display a specific tag",
                "operationId": "ad56917a923ba616825a808f74ae7815",
                "parameters": [
                    {
                        "name": "tagName",
                        "in": "path",
                        "description": "Tag name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Tag"
                                                },
                                                {
                                                    "properties": {
                                                        "posts": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Post"
                                                            }
                                                        },
                                                        "posts_count": {
                                                            "type": "integer",
                                                            "example": 15
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tag not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tags"
                ],
                "summary": "Update a tag",
                "operationId": "e343ae620869d50c9ff40d171a88d2fa",
                "parameters": [
                    {
                        "name": "tagName",
                        "in": "path",
                        "description": "Tag name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for Laravel framework related posts"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tag updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tag updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tag not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to update tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "Remove a tag",
                "operationId": "71bacd64b6f700cc2f2abac2f0bd3495",
                "parameters": [
                    {
                        "name": "tagName",
                        "in": "path",
                        "description": "Tag name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tag not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Cannot delete a tag that is associated with posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete tags - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Display a listing of users (admin only)",
                "operationId": "41a0b1897bd592c41f6d146d6dc328c6",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by username or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "banned",
                                "pending"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{uid}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Display a specific user (admin only)",
                "operationId": "1ddef9074c58a7773c8afb9f7587fc12",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get the authenticated user's profile with posts",
                "operationId": "870a15ce189a299ab862983e2a0166a2",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                {
                                                    "properties": {
                                                        "posts": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Post"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update the authenticated user's profile",
                "operationId": "80efce1f45b04a774a8bc9095f4c8e4f",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "newusername"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "newemail@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/password": {
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update the authenticated user's password",
                "operationId": "476b48702b91218d256637d4f5a262e5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentpassword123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{uid}/role": {
            "put": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Update a user's role (admin only)",
                "operationId": "69169de4faa653852a092fc73fede854",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role"
                                ],
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "example": "moderator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User role updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user already has this role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{uid}/status": {
            "put": {
                "tags": [
                    "Admin - User Management"
                ],
                "summary": "Update a user's status (admin only)",
                "operationId": "13182a35506a8d81441ed1cb6844aa1b",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "banned",
                                            "pending"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user already has this status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/account": {
            "delete": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Delete the authenticated user's account",
                "operationId": "c444dc755454ff0c7b7c1bd521053bc5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "userpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{uid}/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get public profile of a user",
                "operationId": "2a8ace2414439c03989df33c4ac4ad21",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public user profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "UID": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "Username": {
                                                    "type": "string",
                                                    "example": "johndoe"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "posts": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Post"
                                                    }
                                                },
                                                "posts_count": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "UID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "Username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "Email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "Role": {
                        "type": "string",
                        "example": "user"
                    },
                    "Status": {
                        "type": "string",
                        "example": "active"
                    },
                    "LastLoginAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Post": {
                "title": "Post",
                "description": "Post model",
                "properties": {
                    "PostID": {
                        "type": "integer",
                        "example": 1
                    },
                    "Author": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "Topic": {
                        "type": "string",
                        "example": "How to learn Laravel"
                    },
                    "Content": {
                        "type": "string",
                        "example": "This is the content of the post..."
                    },
                    "Status": {
                        "type": "string",
                        "example": "published"
                    },
                    "LastEditedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "ParentPostID": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "PostType": {
                        "type": "string",
                        "example": "original"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "$ref": "#/components/schemas/User"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                },
                "type": "object"
            },
            "Tag": {
                "title": "Tag",
                "description": "Tag model",
                "properties": {
                    "TagName": {
                        "type": "string",
                        "example": "laravel"
                    },
                    "Description": {
                        "type": "string",
                        "example": "Laravel framework related posts"
                    },
                    "posts_count": {
                        "type": "integer",
                        "example": 15
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "Validation Error",
                "description": "Validation error response",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Validation error"
                    },
                    "errors": {
                        "properties": {
                            "field_name": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "title": "Success Response",
                "description": "Standard success response",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "An error occurred"
                    }
                },
                "type": "object"
            },
            "PaginatedResponse": {
                "title": "Paginated Response",
                "description": "Paginated data response",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "data": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "first_page_url": {
                                "type": "string",
                                "example": "http://localhost/api/posts?page=1"
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 5
                            },
                            "last_page_url": {
                                "type": "string",
                                "example": "http://localhost/api/posts?page=5"
                            },
                            "next_page_url": {
                                "type": "string",
                                "example": "http://localhost/api/posts?page=2",
                                "nullable": true
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost/api/posts"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "prev_page_url": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 67
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Advanced Posts",
            "description": "Advanced Posts"
        },
        {
            "name": "Analytics",
            "description": "Analytics"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Posts",
            "description": "Posts"
        },
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Tags",
            "description": "Tags"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "User Profile",
            "description": "User Profile"
        },
        {
            "name": "Admin - User Management",
            "description": "Admin - User Management"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}